server {
    listen 80;
    server_name salonibalkondekar.codes www.salonibalkondekar.codes;

    # This handles the Let's Encrypt renewal challenges.
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# This is the main server block that handles all secure traffic.
server {
    listen 443 ssl;
    server_name salonibalkondekar.codes www.salonibalkondekar.codes;

    # SSL Certificate Configuration
    # These paths point to the certificates mounted via the volume in docker-compose.yml
    ssl_certificate /etc/letsencrypt/live/salonibalkondekar.codes/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/salonibalkondekar.codes/privkey.pem;

    # --- Routing Rules ---

    # Location for your root domain (your portfolio)
    location / {
        # 'portfolio' is the service name from docker-compose.yml
        proxy_pass http://portfolio:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Location for your text-to-cad application
    location /text-to-cad/ {
        # 'frontend' is the service name from docker-compose.yml
        # The trailing slash on proxy_pass is important here!
        proxy_pass http://frontend:80/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Headers required for WebSocket connections (used by many modern frontends)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}